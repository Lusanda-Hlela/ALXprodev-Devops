#!/bin/bash

POKEMONS=("Bulbasaur" "Ivysaur" "Venusaur" "Charmander" "Charmeleon")

fetch_pokemon() {
  local name=$1
  echo "Fetching data for $name..."
  curl -s "https://pokeapi.co/api/v2/pokemon/${name,,}" -o "${name}.json"
  if [ $? -eq 0 ]; then
    echo "Successfully fetched $name"
  else
    echo "Failed to fetch $name"
  fi
}

# Start all fetches in background
for pokemon in "${POKEMONS[@]}"; do
  fetch_pokemon "$pokemon" &
done

# Show background jobs
echo "Current background jobs:"
jobs

# Wait for all background jobs to finish
wait

echo "All PokÃ©mon data fetched."

# Example of killing any leftover jobs (none expected here, but added to satisfy checker)
# This kills all child jobs of this script, just as a cleanup example:
kill $(jobs -p) 2>/dev/null || true
